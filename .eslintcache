[{"/home/wimmer/Projetos/centralservidor-web/src/App.tsx":"1","/home/wimmer/Projetos/centralservidor-web/src/index.tsx":"2","/home/wimmer/Projetos/centralservidor-web/src/reportWebVitals.ts":"3","/home/wimmer/Projetos/centralservidor-web/src/pages/SignIn/index.tsx":"4","/home/wimmer/Projetos/centralservidor-web/src/hooks/index.tsx":"5","/home/wimmer/Projetos/centralservidor-web/src/hooks/darkMode.tsx":"6","/home/wimmer/Projetos/centralservidor-web/src/hooks/theme.tsx":"7","/home/wimmer/Projetos/centralservidor-web/src/pages/SignIn/SingInForm.tsx":"8","/home/wimmer/Projetos/centralservidor-web/src/components/controls/index.tsx":"9","/home/wimmer/Projetos/centralservidor-web/src/components/controls/Input.tsx":"10","/home/wimmer/Projetos/centralservidor-web/src/components/controls/Button.tsx":"11","/home/wimmer/Projetos/centralservidor-web/src/services/api.ts":"12","/home/wimmer/Projetos/centralservidor-web/src/components/controls/utils/handleFieldProps.ts":"13","/home/wimmer/Projetos/centralservidor-web/src/components/Toast.tsx":"14","/home/wimmer/Projetos/centralservidor-web/src/hooks/toast.tsx":"15","/home/wimmer/Projetos/centralservidor-web/src/hooks/auth/index.tsx":"16","/home/wimmer/Projetos/centralservidor-web/src/hooks/auth/getUser.ts":"17","/home/wimmer/Projetos/centralservidor-web/src/routes/index.tsx":"18","/home/wimmer/Projetos/centralservidor-web/src/pages/Dashboard/index.tsx":"19","/home/wimmer/Projetos/centralservidor-web/src/routes/Route.tsx":"20","/home/wimmer/Projetos/centralservidor-web/src/pages/NextPage/index.tsx":"21","/home/wimmer/Projetos/centralservidor-web/src/components/Navigation.tsx":"22"},{"size":407,"mtime":1611171799839,"results":"23","hashOfConfig":"24"},{"size":272,"mtime":1610680491247,"results":"25","hashOfConfig":"24"},{"size":480,"mtime":1609118237075,"results":"26","hashOfConfig":"24"},{"size":3498,"mtime":1610681751680,"results":"27","hashOfConfig":"24"},{"size":486,"mtime":1611020473871,"results":"28","hashOfConfig":"24"},{"size":954,"mtime":1611231072119,"results":"29","hashOfConfig":"24"},{"size":1493,"mtime":1611018459523,"results":"30","hashOfConfig":"24"},{"size":4403,"mtime":1611162733483,"results":"31","hashOfConfig":"24"},{"size":90,"mtime":1610678098047,"results":"32","hashOfConfig":"24"},{"size":732,"mtime":1610737413210,"results":"33","hashOfConfig":"24"},{"size":478,"mtime":1610737839910,"results":"34","hashOfConfig":"24"},{"size":123,"mtime":1610755209497,"results":"35","hashOfConfig":"24"},{"size":480,"mtime":1610740267438,"results":"36","hashOfConfig":"24"},{"size":1595,"mtime":1611089276317,"results":"37","hashOfConfig":"24"},{"size":951,"mtime":1611099441470,"results":"38","hashOfConfig":"24"},{"size":1827,"mtime":1611231317758,"results":"39","hashOfConfig":"24"},{"size":1002,"mtime":1610935146110,"results":"40","hashOfConfig":"24"},{"size":768,"mtime":1611171304323,"results":"41","hashOfConfig":"24"},{"size":581,"mtime":1611156750272,"results":"42","hashOfConfig":"24"},{"size":810,"mtime":1611163450778,"results":"43","hashOfConfig":"24"},{"size":549,"mtime":1611159903676,"results":"44","hashOfConfig":"24"},{"size":8009,"mtime":1611192575514,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1xz16rp",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},"/home/wimmer/Projetos/centralservidor-web/src/App.tsx",[],["93","94","95","96","97"],"/home/wimmer/Projetos/centralservidor-web/src/index.tsx",[],"/home/wimmer/Projetos/centralservidor-web/src/reportWebVitals.ts",[],"/home/wimmer/Projetos/centralservidor-web/src/pages/SignIn/index.tsx",[],"/home/wimmer/Projetos/centralservidor-web/src/hooks/index.tsx",[],"/home/wimmer/Projetos/centralservidor-web/src/hooks/darkMode.tsx",[],"/home/wimmer/Projetos/centralservidor-web/src/hooks/theme.tsx",[],"/home/wimmer/Projetos/centralservidor-web/src/pages/SignIn/SingInForm.tsx",[],"/home/wimmer/Projetos/centralservidor-web/src/components/controls/index.tsx",[],"/home/wimmer/Projetos/centralservidor-web/src/components/controls/Input.tsx",[],"/home/wimmer/Projetos/centralservidor-web/src/components/controls/Button.tsx",[],"/home/wimmer/Projetos/centralservidor-web/src/services/api.ts",[],["98","99","100","101","102"],"/home/wimmer/Projetos/centralservidor-web/src/components/controls/utils/handleFieldProps.ts",[],"/home/wimmer/Projetos/centralservidor-web/src/components/Toast.tsx",[],"/home/wimmer/Projetos/centralservidor-web/src/hooks/toast.tsx",[],"/home/wimmer/Projetos/centralservidor-web/src/hooks/auth/index.tsx",[],"/home/wimmer/Projetos/centralservidor-web/src/hooks/auth/getUser.ts",[],"/home/wimmer/Projetos/centralservidor-web/src/routes/index.tsx",[],"/home/wimmer/Projetos/centralservidor-web/src/pages/Dashboard/index.tsx",[],"/home/wimmer/Projetos/centralservidor-web/src/routes/Route.tsx",[],"/home/wimmer/Projetos/centralservidor-web/src/pages/NextPage/index.tsx",[],"/home/wimmer/Projetos/centralservidor-web/src/components/Navigation.tsx",["103"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport {\n  createStyles,\n  Theme,\n  makeStyles,\n  useTheme,\n} from '@material-ui/core/styles';\nimport {\n  Drawer,\n  AppBar,\n  Toolbar,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n  IconButton,\n} from '@material-ui/core';\nimport {\n  MoveToInbox as InboxIcon,\n  Mail as MailIcon,\n  Menu as MenuIcon,\n  ChevronRight as ChevronRightIcon,\n  ChevronLeft as ChevronLeftIcon,\n  AccountBalance,\n  BarChart,\n  HowToReg,\n  ListAlt,\n  Link as LinkIcon,\n  NightsStay,\n  WbSunny,\n  PowerSettingsNew,\n  MoreVert as MoreIcon,\n} from '@material-ui/icons';\n\nimport { useAuth } from '../hooks/auth';\nimport logoCentral from '../assets/centralservidor-logo-texto.png';\nimport logoPms from '../assets/LogoPMS.png';\nimport { useDarkMode } from '../hooks/darkMode';\n\nconst routes = [\n  { title: 'Declarações', icon: <AccountBalance /> },\n  { title: 'Avaliações', icon: <BarChart /> },\n  { title: 'Recadastramento', icon: <HowToReg /> },\n  { title: 'Formulários', icon: <ListAlt /> },\n  { title: 'Links', icon: <LinkIcon /> },\n];\n\nconst mobileMenuId = 'primary-search-account-menu-mobile';\n\nconst drawerWidth = 256;\n\nconst useStyles = makeStyles(\n  ({ zIndex, transitions, palette, spacing, breakpoints, mixins }: Theme) =>\n    createStyles({\n      root: {\n        display: 'flex',\n      },\n      appBar: {\n        zIndex: zIndex.drawer + 1,\n        transition: transitions.create(['width', 'margin'], {\n          easing: transitions.easing.sharp,\n          duration: transitions.duration.leavingScreen,\n        }),\n      },\n      appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: transitions.create(['width', 'margin'], {\n          easing: transitions.easing.sharp,\n          duration: transitions.duration.enteringScreen,\n        }),\n      },\n      menuButton: {\n        marginRight: spacing(0.5),\n        [breakpoints.up('sm')]: {\n          marginRight: spacing(2),\n        },\n      },\n      logoCentral: {\n        height: 44,\n        [breakpoints.up('sm')]: {\n          height: 50,\n        },\n      },\n      grow: {\n        flexGrow: 1,\n      },\n      sectionDesktop: {\n        display: 'none',\n        [breakpoints.up('md')]: {\n          display: 'flex',\n        },\n      },\n      sectionMobile: {\n        display: 'flex',\n        [breakpoints.up('md')]: {\n          display: 'none',\n        },\n      },\n      hide: {\n        display: 'none',\n      },\n      drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n        '& .MuiSvgIcon-root': {\n          color: palette.type === 'dark' ? '' : palette.primary.contrastText,\n        },\n      },\n      drawerOpen: {\n        backgroundColor: palette.type === 'dark' ? '' : palette.primary.light,\n        color: palette.type === 'dark' ? '' : palette.primary.contrastText,\n        width: drawerWidth,\n        transition: transitions.create('width', {\n          easing: transitions.easing.sharp,\n          duration: transitions.duration.enteringScreen,\n        }),\n      },\n      drawerClose: {\n        backgroundColor: palette.type === 'dark' ? '' : palette.primary.light,\n        color: palette.type === 'dark' ? '' : palette.primary.contrastText,\n        transition: transitions.create('width', {\n          easing: transitions.easing.sharp,\n          duration: transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: 0,\n        [breakpoints.up('sm')]: {\n          width: spacing(7) + 1,\n        },\n      },\n      toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        padding: spacing(0, 1),\n        // necessary for content to be below app bar\n        ...mixins.toolbar,\n      },\n      content: {\n        flexGrow: 1,\n        padding: spacing(3),\n      },\n    }),\n);\n\nconst Navigation: React.FC = ({ children }) => {\n  const [open, setOpen] = useState(true);\n  const [\n    mobileMoreAnchorEl,\n    setMobileMoreAnchorEl,\n  ] = useState<null | HTMLElement>(null);\n  const classes = useStyles();\n  const theme = useTheme();\n  // eslint-disable-next-line\n  const { user, signOut } = useAuth();\n  const { darkMode, toggleDarkMode } = useDarkMode();\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  if (user) {\n    return (\n      <div className={classes.root}>\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, {\n                [classes.hide]: open,\n              })}\n            >\n              <MenuIcon />\n            </IconButton>\n            <img\n              src={logoCentral}\n              alt=\"Logo Central do Servidor\"\n              className={classes.logoCentral}\n            />\n            <div className={classes.grow} />\n            <div className={classes.sectionDesktop}>\n              <IconButton\n                aria-label=\"muda cores para tema escuro\"\n                color=\"inherit\"\n                onClick={toggleDarkMode}\n              >\n                {darkMode ? <WbSunny /> : <NightsStay />}\n              </IconButton>\n              <IconButton\n                edge=\"end\"\n                aria-label=\"sai da aplicação\"\n                onClick={signOut}\n                color=\"inherit\"\n              >\n                <PowerSettingsNew />\n              </IconButton>\n            </div>\n            <div className={classes.sectionMobile}>\n              <IconButton\n                aria-label=\"mostra mais opções\"\n                aria-controls={mobileMenuId}\n                aria-haspopup=\"true\"\n                onClick={handleMobileMenuOpen}\n                color=\"inherit\"\n              >\n                <MoreIcon />\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          variant=\"permanent\"\n          className={clsx(classes.drawer, {\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          })}\n          classes={{\n            paper: clsx({\n              [classes.drawerOpen]: open,\n              [classes.drawerClose]: !open,\n            }),\n          }}\n        >\n          <div className={classes.toolbar}>\n            <img\n              src={logoPms}\n              alt=\"Logo Prefeitura de Santos\"\n              style={{ marginLeft: theme.spacing(1) }}\n            />\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === 'rtl' ? (\n                <ChevronRightIcon />\n              ) : (\n                <ChevronLeftIcon />\n              )}\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            {routes.map((item) => (\n              <ListItem button key={item.title}>\n                <ListItemIcon>{item.icon}</ListItemIcon>\n                <ListItemText primary={item.title} />\n              </ListItem>\n            ))}\n          </List>\n          <Divider />\n          <List>\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n        </Drawer>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          {children}\n        </main>\n      </div>\n    );\n  }\n  return <div>{children}</div>;\n};\n\nexport default Navigation;\n",{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"104","replacedBy":"114"},{"ruleId":"106","replacedBy":"115"},{"ruleId":"108","replacedBy":"116"},{"ruleId":"110","replacedBy":"117"},{"ruleId":"112","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":153,"column":5,"nodeType":"121","messageId":"122","endLine":153,"endColumn":23},"lines-around-directive",["123"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["123"],[],[],[],[],"@typescript-eslint/no-unused-vars","'mobileMoreAnchorEl' is assigned a value but never used.","Identifier","unusedVar","padding-line-between-statements"]