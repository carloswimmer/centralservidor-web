[{"/home/wimmer/Projetos/centralservidor-web/src/App.tsx":"1","/home/wimmer/Projetos/centralservidor-web/src/index.tsx":"2","/home/wimmer/Projetos/centralservidor-web/src/reportWebVitals.ts":"3","/home/wimmer/Projetos/centralservidor-web/src/styles/theme.ts":"4","/home/wimmer/Projetos/centralservidor-web/src/pages/SignIn/index.tsx":"5","/home/wimmer/Projetos/centralservidor-web/src/hooks/index.tsx":"6","/home/wimmer/Projetos/centralservidor-web/src/hooks/darkMode.tsx":"7","/home/wimmer/Projetos/centralservidor-web/src/hooks/theme.tsx":"8","/home/wimmer/Projetos/centralservidor-web/src/pages/SignIn/SingInForm.tsx":"9","/home/wimmer/Projetos/centralservidor-web/src/utils/handleFieldProps.ts":"10","/home/wimmer/Projetos/centralservidor-web/src/components/controls/index.tsx":"11","/home/wimmer/Projetos/centralservidor-web/src/components/controls/Input.tsx":"12","/home/wimmer/Projetos/centralservidor-web/src/components/controls/Button.tsx":"13"},{"size":225,"mtime":1610560997848,"results":"14","hashOfConfig":"15"},{"size":272,"mtime":1610680491247,"results":"16","hashOfConfig":"15"},{"size":480,"mtime":1609118237075,"results":"17","hashOfConfig":"15"},{"size":931,"mtime":1609789331225,"results":"18","hashOfConfig":"19"},{"size":3498,"mtime":1610681751680,"results":"20","hashOfConfig":"15"},{"size":310,"mtime":1610560878754,"results":"21","hashOfConfig":"15"},{"size":723,"mtime":1610589199308,"results":"22","hashOfConfig":"15"},{"size":1493,"mtime":1610579790030,"results":"23","hashOfConfig":"15"},{"size":4083,"mtime":1610684426605,"results":"24","hashOfConfig":"15"},{"size":480,"mtime":1610682755472,"results":"25","hashOfConfig":"15"},{"size":90,"mtime":1610678098047,"results":"26","hashOfConfig":"15"},{"size":758,"mtime":1610681334328,"results":"27","hashOfConfig":"15"},{"size":500,"mtime":1610681074975,"results":"28","hashOfConfig":"15"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"10umia9",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1ktfil5",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"31"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"31"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"31"},"/home/wimmer/Projetos/centralservidor-web/src/App.tsx",[],["61","62","63","64","65"],"/home/wimmer/Projetos/centralservidor-web/src/index.tsx",[],"/home/wimmer/Projetos/centralservidor-web/src/reportWebVitals.ts",[],"/home/wimmer/Projetos/centralservidor-web/src/styles/theme.ts",[],["66","67","68","69","70"],"/home/wimmer/Projetos/centralservidor-web/src/pages/SignIn/index.tsx",["71"],"import React from 'react';\nimport { Typography, Grid, Box } from '@material-ui/core';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { Copyright } from '@material-ui/icons';\n\nimport logoCentral from '../../assets/centralservidor-logo-texto.png';\nimport logoSshd from '../../assets/SshdLogo.png';\nimport logoPms from '../../assets/LogoPMS.png';\nimport signInBackground from '../../assets/people-working.jpg';\n\nimport SignInForm from './SingInForm';\n\nconst useStyles = makeStyles(({ palette }: Theme) => ({\n  root: {\n    backgroundColor:\n      palette.type === 'light' ? palette.primary.light : undefined,\n    color: palette.primary.contrastText,\n  },\n\n  contentClass: {\n    height: '100vh',\n    maxWidth: 600,\n  },\n\n  header: {\n    flex: 1,\n    height: 279,\n    backgroundColor: palette.primary.main,\n    '& img': {\n      width: 370,\n    },\n  },\n\n  formHeader: {\n    display: 'flex',\n    alignItems: 'flex-end',\n    marginBottom: 14,\n    marginTop: 40,\n    '& img': {\n      width: 48,\n      marginRight: 6,\n    },\n  },\n  formHeaderText: {\n    maxWidth: 270,\n    marginBottom: 36,\n  },\n\n  backgroundClass: {\n    position: 'relative',\n    flex: 1,\n    background: `url(${signInBackground}) no-repeat center`,\n    backgroundSize: 'cover',\n\n    '&:after': {\n      position: 'absolute',\n      content: '\"\"',\n      height: '100vh',\n      width: '100%',\n      top: 0,\n      left: 0,\n      background:\n        palette.type === 'dark'\n          ? 'linear-gradient(to right, rgba(4, 44, 30, 0.6) 20%, rgba(76, 70, 9, 0.6) 100%)'\n          : 'linear-gradient(to right, rgba(4, 44, 30, 0.6) 20%, rgba(53, 6, 124, 0.6) 100%)',\n    },\n  },\n\n  logoPms: {\n    position: 'absolute',\n    top: 56,\n    right: 64,\n\n    '& img': {\n      width: 176,\n    },\n  },\n\n  copyright: {\n    display: 'flex',\n    position: 'absolute',\n    bottom: 40,\n    right: 64,\n    opacity: 0.6,\n  },\n}));\n\nconst SignIn: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <Grid className={classes.root} container>\n      <Grid className={classes.contentClass} container item>\n        <Grid\n          className={classes.header}\n          container\n          item\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <img src={logoCentral} alt=\"Logo Central do Servidor\" />\n        </Grid>\n        <Grid container item direction=\"column\" alignItems=\"center\">\n          <Grid className={classes.formHeader} item>\n            <img src={logoSshd} alt=\"Logo Autenticação SSHD\" />\n            <Box fontSize={28} fontWeight=\"fontWeightBold\">\n              SSHD\n            </Box>\n          </Grid>\n          <Grid className={classes.formHeaderText} item>\n            <Typography variant=\"body1\" align=\"center\">\n              Entre com sua conta da prefeitura para ter acesso ao sistema\n            </Typography>\n          </Grid>\n          <Box maxWidth={340}>\n            <Grid item>\n              <SignInForm />\n            </Grid>\n          </Box>\n        </Grid>\n      </Grid>\n      <Grid className={classes.backgroundClass} item />\n      <Grid className={classes.logoPms} item>\n        <img src={logoPms} alt=\"Logo da Prefeitura de Santos\" />\n      </Grid>\n      <Grid className={classes.copyright} item>\n        <Copyright fontSize=\"small\" />\n        <Typography variant=\"caption\" align=\"right\">\n          &nbsp;Composição sobre fotos de Kelly Sikkema, Austin Distel e Glenn\n          Carstens-Peters\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default SignIn;\n","/home/wimmer/Projetos/centralservidor-web/src/hooks/index.tsx",[],"/home/wimmer/Projetos/centralservidor-web/src/hooks/darkMode.tsx",[],"/home/wimmer/Projetos/centralservidor-web/src/hooks/theme.tsx",[],"/home/wimmer/Projetos/centralservidor-web/src/pages/SignIn/SingInForm.tsx",["72","73","74","75"],"/home/wimmer/Projetos/centralservidor-web/src/utils/handleFieldProps.ts",["76","77","78","79"],"import { FieldInputProps, FormikProps } from 'formik';\n\ntype FieldProps = FieldInputProps<any> & {\n  error: boolean;\n  helperText?: string | false;\n};\n\nexport default function handleFieldProps(\n  formik: FormikProps<any>,\n  id: string,\n): FieldProps {\n  const { getFieldProps, getFieldMeta } = formik;\n\n  const errorMessage = getFieldMeta(id).touched && getFieldMeta(id).error;\n\n  return {\n    error: !!errorMessage,\n    helperText: errorMessage,\n    ...getFieldProps(id),\n  };\n}\n","/home/wimmer/Projetos/centralservidor-web/src/components/controls/index.tsx",[],"/home/wimmer/Projetos/centralservidor-web/src/components/controls/Input.tsx",["80"],"import React from 'react';\nimport { TextField, TextFieldProps } from '@material-ui/core';\nimport { useDarkMode } from '../../hooks/darkMode';\n\nconst Input: React.FC<TextFieldProps> = (props) => {\n  const {\n    name,\n    label,\n    variant,\n    value,\n    onChange,\n    onBlur,\n    error,\n    helperText,\n    InputProps,\n    ...others\n  } = props;\n\n  const { darkMode } = useDarkMode();\n\n  return (\n    <TextField\n      variant={variant || 'outlined'}\n      fullWidth\n      label={label}\n      name={name}\n      value={value}\n      color={darkMode ? 'secondary' : 'primary'}\n      onChange={onChange}\n      onBlur={onBlur}\n      error={error}\n      helperText={helperText}\n      InputProps={InputProps}\n      {...others}\n    />\n  );\n};\n\nexport default Input;\n","/home/wimmer/Projetos/centralservidor-web/src/components/controls/Button.tsx",["81"],"import React from 'react';\nimport { Button as MuiButton, ButtonProps } from '@material-ui/core';\n\ninterface MuiButtonProps extends ButtonProps {\n  text: string;\n}\n\nconst Button: React.FC<MuiButtonProps> = (props) => {\n  const { text, size, color, variant, onClick, ...others } = props;\n\n  return (\n    <MuiButton\n      variant={variant || 'contained'}\n      size={size}\n      color={color}\n      onClick={onClick}\n      {...others}\n    >\n      {text}\n    </MuiButton>\n  );\n};\n\nexport default Button;\n",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"82","replacedBy":"92"},{"ruleId":"84","replacedBy":"93"},{"ruleId":"86","replacedBy":"94"},{"ruleId":"88","replacedBy":"95"},{"ruleId":"90","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":3,"column":22,"nodeType":"99","messageId":"100","endLine":3,"endColumn":27},{"ruleId":"97","severity":1,"message":"101","line":1,"column":40,"nodeType":"99","messageId":"100","endLine":1,"endColumn":50},{"ruleId":"97","severity":1,"message":"98","line":9,"column":3,"nodeType":"99","messageId":"100","endLine":9,"endColumn":8},{"ruleId":"97","severity":1,"message":"102","line":12,"column":18,"nodeType":"99","messageId":"100","endLine":12,"endColumn":31},{"ruleId":"103","severity":1,"message":"104","line":74,"column":9,"nodeType":"105","messageId":"106","endLine":74,"endColumn":20},{"ruleId":"97","severity":1,"message":"107","line":1,"column":10,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},{"ruleId":"97","severity":1,"message":"108","line":1,"column":27,"nodeType":"99","messageId":"100","endLine":1,"endColumn":38},{"ruleId":"109","severity":1,"message":"110","line":3,"column":35,"nodeType":"111","messageId":"112","endLine":3,"endColumn":38,"suggestions":"113"},{"ruleId":"109","severity":1,"message":"110","line":9,"column":23,"nodeType":"111","messageId":"112","endLine":9,"endColumn":26,"suggestions":"114"},{"ruleId":"97","severity":1,"message":"115","line":2,"column":21,"nodeType":"99","messageId":"100","endLine":2,"endColumn":35},{"ruleId":"97","severity":1,"message":"116","line":2,"column":31,"nodeType":"99","messageId":"100","endLine":2,"endColumn":42},"lines-around-directive",["117"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["117"],[],[],[],[],"@typescript-eslint/no-unused-vars","'Theme' is defined but never used.","Identifier","unusedVar","'MouseEvent' is defined but never used.","'FormikHelpers' is defined but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","'FieldInputProps' is defined but never used.","'FormikProps' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["118","119"],["120","121"],"'TextFieldProps' is defined but never used.","'ButtonProps' is defined but never used.","padding-line-between-statements",{"messageId":"122","fix":"123","desc":"124"},{"messageId":"125","fix":"126","desc":"127"},{"messageId":"122","fix":"128","desc":"124"},{"messageId":"125","fix":"129","desc":"127"},"suggestUnknown",{"range":"130","text":"131"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"130","text":"132"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"133","text":"131"},{"range":"133","text":"132"},[90,93],"unknown","never",[216,219]]